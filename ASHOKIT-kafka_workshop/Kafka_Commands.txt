APACHE KAFKA is a distributed streaming platform.
Apache Kafka is used to process real time data feeds with high throughput and low latency.
--------------------------------
What role does ZOOKEEPER play in a cluster of Kafka?  - Apache ZooKeeper acts as a distributed, open-source configuration and synchronization service, along with being a naming registry for distributed applications. It keeps track of the status of the Kafka cluster nodes, as well as of Kafka topics, partitions, etc.
--------------------------------
A Kafka BROKER receives messages from producers and stores them on disk keyed by unique offset. A Kafka broker allows consumers to fetch messages by a topic, partition.
--------------------------------
A Kafka CLUSTER consists of one or more servers (Kafka brokers).
Each Broker can have one or more Topics. Kafka topics are divided into a number of partitions.

===========================================================================
Ex : flights data, sensors data, stocks data, news data etc....

Kafka works based on Publisher and Subscriber model

Kafka Terminology
-----------------
Zookeeper
Kafka Server
Kafka Topic
Message
Publisher
Subscriber

Kafka APIs
----------
Connector API
Publisher API
Subscriber API
Streams API


======================================
server.properties :
	log.dirs=C:/apache-kafka/kafka-logs

zookeeper.properties
	# the directory where the snapshot is stored.
	dataDir=C:/apache-kafka/zookeeper-data


---------------------------------------------------------------
Spring Boot + Apache Kafka Application
=======================================

cd C:\apache-kafka\bin\windows 

C:\apache-kafka\bin\windows> 		zookeeper-server-start.bat ..\..\config\zookeeper.properties
C:\apache-kafka\bin\windows>		kafka-server-start.bat ..\..\config\server.properties

C:\kafka-3.2.1\bin\windows>
✔	kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic demoTopic
❌	kafka-topics.bat --create --zookeeper localhost:9092 --replication-factor 1 --partitions 1 --topic demoTopic

✔	kafka-topics.bat --list --bootstrap-server localhost:9092
❌	kafka-topics.bat --list --zookeeper localhost:2181	  


--------------
Consume a message :
	kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic javatechie
	
Produce a message :
	kafka-console-producer.bat --broker-list localhost:9092 --topic javatechie


===================
[replication-factor 1] :	means how many copies of message you want to create, because whenever some subscriber subscribe to that message , then that message will be deleted from the topic. So as many replication-factor we have to create (means how many copies of message you want to create) as per how many subscriber we have associated. 
 If you are dealing with multiple subcribers then you will create multiple messages. Each message for 1 subscriber.

----------------------------------------------------------------
Step-1 : Download Zookeeper from below URL :

		https://zookeeper.apache.org/releases.html				>> 			Apache ZooKeeper 3.7.1 	(latest stable release)

Step-2 : Download Apache Kafka from below URL :

		https://kafka.apache.org/downloads							>>			Scala 2.13  - kafka_2.13-3.3.1.tgz 	(The current stable version is 3.3.1)

Step-3 : Set Path to ZOOKEEPER in Environment variables upto bin folder

Step-4 : Start Zookeeper server using below command from Kafka folder

    Command : zookeeper-server-start.bat zookeeper.properties

Note: Above command will available in kafka/bin/windows folder

Note: zookeeper.properties file will be available in kafka/config folder. You can copy zookeeper.properties and server.properties files from kafka/config folder to kafka/bin/windows folder.

Step-5: Start Kafka Server using below command from Kakfa folder

    Command : kafka-server-start.bat server.properties

Note: server.properties file will be available in config folder (Copied to windows folder)

Step-6 : Create Kakfa Topic using below command from kafka/bin/windows folder

Command : kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic demo-sbms-topic

Step-7 : View created Topics using below command

      Command : kafka-topics.bat --list --zookeeper localhost:2181

Step-8 : Create Spring Boot Project in IDE
===========================================

Step-9: Add below kafka related dependencies in pom.xml

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		

Step-9: Create RestController, KafaProducer and KafaConsumer classes to publish and subsribe message


Step-10: Test application using PostMan.


Sample Data
------------

{
"customerId":101,
"customerName":"Ashok",
"customerEmail":"ashok@gmail.com"
}
---------------------------------
[

{
"customerId":101,
"customerName":"Ashok",
"customerEmail":"ashok@gmail.com"
},

{
"customerId":102,
"customerName":"Raj",
"customerEmail":"raj@gmail.com"
},
{
"customerId":102,
"customerName":"John",
"customerEmail":"john@gmail.com"
}

]






